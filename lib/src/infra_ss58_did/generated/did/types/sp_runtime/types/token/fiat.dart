// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:typed_data' as _i2;

import 'package:polkadart/scale_codec.dart' as _i1;

enum Fiat {
  usd('USD', 0),
  aed('AED', 1),
  afn('AFN', 2),
  all('ALL', 3),
  amd('AMD', 4),
  ang('ANG', 5),
  aoa('AOA', 6),
  ars('ARS', 7),
  aud('AUD', 8),
  awg('AWG', 9),
  azn('AZN', 10),
  bam('BAM', 11),
  bbd('BBD', 12),
  bdt('BDT', 13),
  bgn('BGN', 14),
  bhd('BHD', 15),
  bif('BIF', 16),
  bmd('BMD', 17),
  bnd('BND', 18),
  bob('BOB', 19),
  brl('BRL', 20),
  bsd('BSD', 21),
  btn('BTN', 22),
  bwp('BWP', 23),
  byn('BYN', 24),
  bzd('BZD', 25),
  cad('CAD', 26),
  cdf('CDF', 27),
  chf('CHF', 28),
  clp('CLP', 29),
  cny('CNY', 30),
  cop('COP', 31),
  crc('CRC', 32),
  cup('CUP', 33),
  cve('CVE', 34),
  czk('CZK', 35),
  djf('DJF', 36),
  dkk('DKK', 37),
  dop('DOP', 38),
  dzd('DZD', 39),
  egp('EGP', 40),
  ern('ERN', 41),
  etb('ETB', 42),
  eur('EUR', 43),
  fjd('FJD', 44),
  fkp('FKP', 45),
  fok('FOK', 46),
  gbp('GBP', 47),
  gel('GEL', 48),
  ggp('GGP', 49),
  ghs('GHS', 50),
  gip('GIP', 51),
  gmd('GMD', 52),
  gnf('GNF', 53),
  gtq('GTQ', 54),
  gyd('GYD', 55),
  hkd('HKD', 56),
  hnl('HNL', 57),
  hrk('HRK', 58),
  htg('HTG', 59),
  huf('HUF', 60),
  idr('IDR', 61),
  ils('ILS', 62),
  imp('IMP', 63),
  inr('INR', 64),
  iqd('IQD', 65),
  irr('IRR', 66),
  isk('ISK', 67),
  jep('JEP', 68),
  jmd('JMD', 69),
  jod('JOD', 70),
  jpy('JPY', 71),
  kes('KES', 72),
  kgs('KGS', 73),
  khr('KHR', 74),
  kid('KID', 75),
  kmf('KMF', 76),
  krw('KRW', 77),
  kwd('KWD', 78),
  kyd('KYD', 79),
  kzt('KZT', 80),
  lak('LAK', 81),
  lbp('LBP', 82),
  lkr('LKR', 83),
  lrd('LRD', 84),
  lsl('LSL', 85),
  lyd('LYD', 86),
  mad('MAD', 87),
  mdl('MDL', 88),
  mga('MGA', 89),
  mkd('MKD', 90),
  mmk('MMK', 91),
  mnt('MNT', 92),
  mop('MOP', 93),
  mru('MRU', 94),
  mur('MUR', 95),
  mvr('MVR', 96),
  mwk('MWK', 97),
  mxn('MXN', 98),
  myr('MYR', 99),
  mzn('MZN', 100),
  nad('NAD', 101),
  ngn('NGN', 102),
  nio('NIO', 103),
  nok('NOK', 104),
  npr('NPR', 105),
  nzd('NZD', 106),
  omr('OMR', 107),
  pab('PAB', 108),
  pen('PEN', 109),
  pgk('PGK', 110),
  php('PHP', 111),
  pkr('PKR', 112),
  pln('PLN', 113),
  pyg('PYG', 114),
  qar('QAR', 115),
  ron('RON', 116),
  rsd('RSD', 117),
  rub('RUB', 118),
  rwf('RWF', 119),
  sar('SAR', 120),
  sbd('SBD', 121),
  scr('SCR', 122),
  sdg('SDG', 123),
  sek('SEK', 124),
  sgd('SGD', 125),
  shp('SHP', 126),
  sle('SLE', 127),
  sll('SLL', 128),
  sos('SOS', 129),
  srd('SRD', 130),
  ssp('SSP', 131),
  stn('STN', 132),
  syp('SYP', 133),
  szl('SZL', 134),
  thb('THB', 135),
  tjs('TJS', 136),
  tmt('TMT', 137),
  tnd('TND', 138),
  top('TOP', 139),
  try_('TRY', 140),
  ttd('TTD', 141),
  tvd('TVD', 142),
  twd('TWD', 143),
  tzs('TZS', 144),
  uah('UAH', 145),
  ugx('UGX', 146),
  uyu('UYU', 147),
  uzs('UZS', 148),
  ves('VES', 149),
  vnd('VND', 150),
  vuv('VUV', 151),
  wst('WST', 152),
  xaf('XAF', 153),
  xcd('XCD', 154),
  xdr('XDR', 155),
  xof('XOF', 156),
  xpf('XPF', 157),
  yer('YER', 158),
  zar('ZAR', 159),
  zmw('ZMW', 160),
  zwl('ZWL', 161);

  const Fiat(
    this.variantName,
    this.codecIndex,
  );

  factory Fiat.decode(_i1.Input input) {
    return codec.decode(input);
  }

  final String variantName;

  final int codecIndex;

  static const $FiatCodec codec = $FiatCodec();

  String toJson() => variantName;
  _i2.Uint8List encode() {
    return codec.encode(this);
  }
}

class $FiatCodec with _i1.Codec<Fiat> {
  const $FiatCodec();

  @override
  Fiat decode(_i1.Input input) {
    final index = _i1.U8Codec.codec.decode(input);
    switch (index) {
      case 0:
        return Fiat.usd;
      case 1:
        return Fiat.aed;
      case 2:
        return Fiat.afn;
      case 3:
        return Fiat.all;
      case 4:
        return Fiat.amd;
      case 5:
        return Fiat.ang;
      case 6:
        return Fiat.aoa;
      case 7:
        return Fiat.ars;
      case 8:
        return Fiat.aud;
      case 9:
        return Fiat.awg;
      case 10:
        return Fiat.azn;
      case 11:
        return Fiat.bam;
      case 12:
        return Fiat.bbd;
      case 13:
        return Fiat.bdt;
      case 14:
        return Fiat.bgn;
      case 15:
        return Fiat.bhd;
      case 16:
        return Fiat.bif;
      case 17:
        return Fiat.bmd;
      case 18:
        return Fiat.bnd;
      case 19:
        return Fiat.bob;
      case 20:
        return Fiat.brl;
      case 21:
        return Fiat.bsd;
      case 22:
        return Fiat.btn;
      case 23:
        return Fiat.bwp;
      case 24:
        return Fiat.byn;
      case 25:
        return Fiat.bzd;
      case 26:
        return Fiat.cad;
      case 27:
        return Fiat.cdf;
      case 28:
        return Fiat.chf;
      case 29:
        return Fiat.clp;
      case 30:
        return Fiat.cny;
      case 31:
        return Fiat.cop;
      case 32:
        return Fiat.crc;
      case 33:
        return Fiat.cup;
      case 34:
        return Fiat.cve;
      case 35:
        return Fiat.czk;
      case 36:
        return Fiat.djf;
      case 37:
        return Fiat.dkk;
      case 38:
        return Fiat.dop;
      case 39:
        return Fiat.dzd;
      case 40:
        return Fiat.egp;
      case 41:
        return Fiat.ern;
      case 42:
        return Fiat.etb;
      case 43:
        return Fiat.eur;
      case 44:
        return Fiat.fjd;
      case 45:
        return Fiat.fkp;
      case 46:
        return Fiat.fok;
      case 47:
        return Fiat.gbp;
      case 48:
        return Fiat.gel;
      case 49:
        return Fiat.ggp;
      case 50:
        return Fiat.ghs;
      case 51:
        return Fiat.gip;
      case 52:
        return Fiat.gmd;
      case 53:
        return Fiat.gnf;
      case 54:
        return Fiat.gtq;
      case 55:
        return Fiat.gyd;
      case 56:
        return Fiat.hkd;
      case 57:
        return Fiat.hnl;
      case 58:
        return Fiat.hrk;
      case 59:
        return Fiat.htg;
      case 60:
        return Fiat.huf;
      case 61:
        return Fiat.idr;
      case 62:
        return Fiat.ils;
      case 63:
        return Fiat.imp;
      case 64:
        return Fiat.inr;
      case 65:
        return Fiat.iqd;
      case 66:
        return Fiat.irr;
      case 67:
        return Fiat.isk;
      case 68:
        return Fiat.jep;
      case 69:
        return Fiat.jmd;
      case 70:
        return Fiat.jod;
      case 71:
        return Fiat.jpy;
      case 72:
        return Fiat.kes;
      case 73:
        return Fiat.kgs;
      case 74:
        return Fiat.khr;
      case 75:
        return Fiat.kid;
      case 76:
        return Fiat.kmf;
      case 77:
        return Fiat.krw;
      case 78:
        return Fiat.kwd;
      case 79:
        return Fiat.kyd;
      case 80:
        return Fiat.kzt;
      case 81:
        return Fiat.lak;
      case 82:
        return Fiat.lbp;
      case 83:
        return Fiat.lkr;
      case 84:
        return Fiat.lrd;
      case 85:
        return Fiat.lsl;
      case 86:
        return Fiat.lyd;
      case 87:
        return Fiat.mad;
      case 88:
        return Fiat.mdl;
      case 89:
        return Fiat.mga;
      case 90:
        return Fiat.mkd;
      case 91:
        return Fiat.mmk;
      case 92:
        return Fiat.mnt;
      case 93:
        return Fiat.mop;
      case 94:
        return Fiat.mru;
      case 95:
        return Fiat.mur;
      case 96:
        return Fiat.mvr;
      case 97:
        return Fiat.mwk;
      case 98:
        return Fiat.mxn;
      case 99:
        return Fiat.myr;
      case 100:
        return Fiat.mzn;
      case 101:
        return Fiat.nad;
      case 102:
        return Fiat.ngn;
      case 103:
        return Fiat.nio;
      case 104:
        return Fiat.nok;
      case 105:
        return Fiat.npr;
      case 106:
        return Fiat.nzd;
      case 107:
        return Fiat.omr;
      case 108:
        return Fiat.pab;
      case 109:
        return Fiat.pen;
      case 110:
        return Fiat.pgk;
      case 111:
        return Fiat.php;
      case 112:
        return Fiat.pkr;
      case 113:
        return Fiat.pln;
      case 114:
        return Fiat.pyg;
      case 115:
        return Fiat.qar;
      case 116:
        return Fiat.ron;
      case 117:
        return Fiat.rsd;
      case 118:
        return Fiat.rub;
      case 119:
        return Fiat.rwf;
      case 120:
        return Fiat.sar;
      case 121:
        return Fiat.sbd;
      case 122:
        return Fiat.scr;
      case 123:
        return Fiat.sdg;
      case 124:
        return Fiat.sek;
      case 125:
        return Fiat.sgd;
      case 126:
        return Fiat.shp;
      case 127:
        return Fiat.sle;
      case 128:
        return Fiat.sll;
      case 129:
        return Fiat.sos;
      case 130:
        return Fiat.srd;
      case 131:
        return Fiat.ssp;
      case 132:
        return Fiat.stn;
      case 133:
        return Fiat.syp;
      case 134:
        return Fiat.szl;
      case 135:
        return Fiat.thb;
      case 136:
        return Fiat.tjs;
      case 137:
        return Fiat.tmt;
      case 138:
        return Fiat.tnd;
      case 139:
        return Fiat.top;
      case 140:
        return Fiat.try_;
      case 141:
        return Fiat.ttd;
      case 142:
        return Fiat.tvd;
      case 143:
        return Fiat.twd;
      case 144:
        return Fiat.tzs;
      case 145:
        return Fiat.uah;
      case 146:
        return Fiat.ugx;
      case 147:
        return Fiat.uyu;
      case 148:
        return Fiat.uzs;
      case 149:
        return Fiat.ves;
      case 150:
        return Fiat.vnd;
      case 151:
        return Fiat.vuv;
      case 152:
        return Fiat.wst;
      case 153:
        return Fiat.xaf;
      case 154:
        return Fiat.xcd;
      case 155:
        return Fiat.xdr;
      case 156:
        return Fiat.xof;
      case 157:
        return Fiat.xpf;
      case 158:
        return Fiat.yer;
      case 159:
        return Fiat.zar;
      case 160:
        return Fiat.zmw;
      case 161:
        return Fiat.zwl;
      default:
        throw Exception('Fiat: Invalid variant index: "$index"');
    }
  }

  @override
  void encodeTo(
    Fiat value,
    _i1.Output output,
  ) {
    _i1.U8Codec.codec.encodeTo(
      value.codecIndex,
      output,
    );
  }
}
